export const JAVASCRIPT_DATA_TYPES_VARIABLES_OPERATORS_COMPARISONS_CONDITIONALS_FLOWS_LOOPS = [
  { id: 1, question: 'What is the output of `console.log(typeof null)`?', options: ['"object"', '"null"', '"undefined"', '"string"'], answer: '"object"' },
  { id: 2, question: 'Which data type can be used to store both integer and floating-point numbers in JavaScript?', options: ['Number', 'Float', 'Integer', 'Decimal'], answer: 'Number' },
  { id: 3, question: 'True or False: In JavaScript, the `===` operator checks for both value and type equality.', options: [], answer: 'True' },
  { id: 4, question: 'What is the output of the following code: `console.log(1 + "1");`?', options: ['11', '2', '"11"', '"2"'], answer: '"11"' },
  { id: 5, question: 'Which of the following is a correct way to declare a variable in JavaScript?', options: ['var x = 10;', 'x := 10;', 'int x = 10;', 'let x : 10;'], answer: 'var x = 10;' },
  { id: 6, question: 'In JavaScript, what will `0 == false` evaluate to?', options: ['True', 'False', 'TypeError', 'SyntaxError'], answer: 'True' },
  { id: 7, question: 'Which method converts a string to an integer in JavaScript?', options: ['parseFloat()', 'Number()', 'parseInt()', 'toString()'], answer: 'parseInt()' },
  { id: 8, question: 'True or False: The `const` keyword allows you to change the value of the variable after it has been assigned.', options: [], answer: 'False' },
  { id: 9, question: 'Which operator is used to check strict inequality in JavaScript?', options: ['==', '!=', '===', '!=='], answer: '!==' },
  { id: 10, question: 'What will be the output of the following code? `if (true && false) { console.log("Hello"); }`', options: ['Hello', 'undefined', 'null', 'No output'], answer: 'No output' },
  { id: 11, question: 'Which of the following is a falsy value in JavaScript?', options: ['0', '"false"', '{}', '[]'], answer: '0' },
  { id: 12, question: 'What is the result of the following code: `let x; console.log(x);`?', options: ['null', 'undefined', '0', 'ReferenceError'], answer: 'undefined' },
  { id: 13, question: 'In a switch statement, which keyword is used to exit a case?', options: ['exit', 'break', 'stop', 'return'], answer: 'break' },
  { id: 14, question: 'What will the following code output? `console.log("5" + 2);`', options: ['52', '7', '"52"', '"7"'], answer: '"52"' },
  { id: 15, question: 'Which loop is guaranteed to execute at least once?', options: ['for', 'while', 'do...while', 'foreach'], answer: 'do...while' },
  { id: 16, question: 'True or False: The `typeof` operator can determine if a variable is an array.', options: [], answer: 'False' },
  { id: 17, question: 'What does the following expression evaluate to: `null || "default"`?', options: ['null', '"default"', 'undefined', 'false'], answer: '"default"' },
  { id: 18, question: 'In JavaScript, which statement is used to throw an error?', options: ['throw', 'error', 'catch', 'raise'], answer: 'throw' },
  { id: 19, question: 'What is the output of `console.log(2 * "3");`?', options: ['6', '"6"', '23', 'NaN'], answer: '6' },
  { id: 20, question: 'Which keyword is used to define a block-scoped variable in JavaScript?', options: ['var', 'let', 'const', 'Both let and const'], answer: 'Both let and const' },
  { id: 21, question: 'How can you check if a variable `x` is a string?', options: ['typeof x === "string"', 'x is String', 'x instanceof string', 'typeof x === "String"'], answer: 'typeof x === "string"' },
  { id: 22, question: 'Which keyword is used to create a constant variable in JavaScript?', options: ['var', 'let', 'const', 'constant'], answer: 'const' },
  { id: 23, question: 'True or False: JavaScript is a loosely typed language, meaning variables do not need to be declared with a specific type.', options: [], answer: 'True' },
  { id: 24, question: 'What will the following code output? `console.log(5 + 3 * 2);`', options: ['16', '13', '10', '11'], answer: '11' },
  { id: 25, question: 'Which statement is used to handle exceptions in JavaScript?', options: ['try...catch', 'catch', 'handle', 'try...error'], answer: 'try...catch' }
];

